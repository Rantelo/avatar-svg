{"version":3,"sources":["hair_styles/Man.js","App.js","serviceWorker.js","index.js"],"names":["Face","_ref","skinColor","react_default","a","createElement","id","className","concat","d","Comb","_ref2","hairColor","Guile","_ref3","Mexican","_ref4","Puddle","_ref5","hair_style","color","comb","Man_Comb","guile","Man_Guile","mexican","Man_Mexican","puddle","Man_Puddle","hair_colors","Blonde","LightBrown","Brown","DarkBrown","skin_colors","NaturalBeige","CreamyBeige","Caramel","Chocolate","DarkChocolate","Man","_ref6","hair","xmlns","viewBox","Man_Face","defaultProps","HairSelector","action","Object","keys","map","e","key","onClick","ColorSelector","colors","style","padding","margin","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","_this$state","react","role","aria-label","width","height","hair_styles_Man","App_ColorSelector","setState","App_HairSelector","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.481100b0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Face = ({skinColor}) => (\r\n  <path id=\"Face\" className={`face ${skinColor}`} d=\"M352.5,153.8c-6.7,0-13.4,0.8-20.2,3.3c-11.8,4.1-34.5,9.1-76.5,9.1s-64.7-4.9-76.5-9.1\tc-6.7-2.5-13.4-3.3-20.2-3.3c-22.7,0-42,12.3-50.4,31.3c-2.5,6.6-4.2,14.8-4.2,22.2v74.9c0,56,5,113.6,46.2,152.2\tc12.6,11.5,26.9,20.6,40.3,29.6l8.4,4.9c3.4,2.5,5.9,4.1,9.2,6.6c13.4,9.9,27.7,19.7,47.1,19.7c19.3,0,32.8-9.9,47.1-20.6\tc3.4-2.5,5.9-4.1,9.2-6.6l8.4-4.9c13.4-9.1,27.7-18.1,40.3-29.6c41.2-37.9,47.1-95.5,47.1-152.2v-74.1c0-7.4-1.7-14.8-5-22.2\tC394.6,166.1,375.2,153.8,352.5,153.8L352.5,153.8z\" />\r\n);\r\n\r\nconst Comb = ({hairColor}) => (\r\n  <path id=\"Comb\" className={`hair ${hairColor}`} d=\"M259.6,10h-1.7c0,0-1.7,0-3.4,0C234,10,130.7,14.3,96.6,91.1c-0.9,1.7-24.7,46.1,7.7,151.9c0.9,3.4,4.3,6,7.7,6\tc2.6,0,5.1-0.9,6.8-2.6c1.7-1.7,2.6-3.4,2.6-6v-34.1c0-6,0.9-11.1,3.4-16.2c5.1-13.7,18.8-22.2,35-22.2c5.1,0,9.4,0.9,14.5,2.6\tc13.7,4.3,38.4,10.2,83.6,10.2s70-6,83.6-10.2c4.3-1.7,9.4-2.6,14.5-2.6c16.2,0,29,8.5,35,22.2c2.6,5.1,3.4,10.2,3.4,16.2v50.3\tc0,4.3,2.6,7.7,6.8,8.5c0.9,0,0.9,0,1.7,0c3.4,0,6-1.7,8.5-4.3c19.6-41,28.2-76.8,25.6-106.7c-2.6-23.9-17.9-44.4-41-52.9\tc-14.5-6-17.9-18.8-18.8-23c2.6-3.4,19.6-7.7,34.1-8.5c3.4,0,6.8-2.6,7.7-6c0.9-2.6,0-6-1.7-8.5C374.8,12.6,278.3,10,259.6,10\tL259.6,10z\" />\r\n);\r\n\r\nconst Guile = ({hairColor}) => (\r\n  <path id=\"Guile\" className={`hair ${hairColor}`} d=\"M393,10H119c-8.5,0-17.1,3.4-23,10.2c-6,6-9.4,15.4-8.5,23.9l15.4,204.8H120l0,0v-42.7c0-6,0.9-11.1,3.4-16.2\tc5.1-13.7,18.8-22.2,35-22.2c5.1,0,9.4,0.9,14.5,2.6c13.7,4.3,38.4,10.2,83.6,10.2s70-6,83.6-10.2c4.3-1.7,9.4-2.6,14.5-2.6\tc16.2,0,29,8.5,35,22.2c2.6,5.1,3.4,10.2,3.4,16.2V237l17.1,0.9l14.5-193.7c0.9-8.5-2.6-17.1-8.5-23.9S401.5,10,393,10L393,10z\" />\r\n);\r\n\r\nconst Mexican = ({hairColor}) => (\r\n  <path id=\"Mexican\" className={`hair ${hairColor}`} d=\"M281.8,10c-2.1,0-4.3,0.9-6,2.6l-19.6,19.6l-19.6-19.6c-1.7-1.7-3.8-2.6-6-2.6s-4.3,0.9-6,2.6L205,32.2\tl-11.1-11.1c-1.7-1.7-4.3-2.6-6.8-2.6s-5.1,1.7-5.1,4.3l-22.2,29L140.2,45c-0.9-0.4-1.9-0.5-2.8-0.5c-3.2,0-6.1,2.1-7.5,4.8\tl-13.7,26.5l-9.4-5.1c-1.3-0.9-2.8-1.3-4.3-1.3s-3,0.4-4.3,1.3c-2.6,1.7-4.3,5.1-4.3,7.7V97c0,27.3-6.8,56.3-20.5,87\tc-8.5,22.2-11.1,60.6,30.7,121.2c0.9,1.7,3.4,3.4,6.8,3.4c1.7,0,4.3-0.9,6-2.6s2.6-3.4,2.6-6c0-6,0-11.1,0-16.2v-77.7\tc0-6,0.9-11.1,3.4-16.2c5.1-13.7,19.6-22.2,35-22.2c5.1,0,9.4,0.9,14.5,2.6c13.7,4.3,38.4,10.2,83.6,10.2s70-6,83.6-11.1\tc4.3-1.7,9.4-2.6,14.5-2.6c15.4,0,29,8.5,35,22.2c2.6,5.1,3.4,10.2,3.4,16.2V282c0,6,0,11.1,0,17.1c0,4.3,2.6,7.7,6,8.5\tc0.8,0.2,1.7,0.3,2.5,0.3c2.8,0,5.6-1.1,6.9-3.7c41-60.6,39.3-99,29.9-120.3c-12.8-31.6-19.6-59.7-19.6-87V78.3c0-2.6-1.7-6-4.3-8.5\tc-1.5-0.5-3.2-1-5-1c-1.3,0-2.5,0.3-3.6,1l-9.4,5.1l-13.7-26.5c-1.3-2.7-4.2-4.8-7.5-4.8c-0.9,0-1.8,0.2-2.8,0.5L352.6,51l-22.2-29\tc-0.9-1.7-3.4-3.4-6-3.4s-4.3,0.9-6,2.6l-11.1,11.1l-19.6-19.6C286.1,10.9,284,10,281.8,10L281.8,10z\" />\r\n);\r\n\r\nconst Puddle = ({hairColor}) => (\r\n  <path id=\"Puddle\" className={`hair ${hairColor}`} d=\"M318.9,6c-12.6,0-23.4,4.5-31.4,13.5C279.4,10.5,267.7,6,256,6c-12.6,0-23.4,4.5-31.4,13.5\tc-8.1-9-19.8-13.5-31.4-13.5c-16.2,0-30.5,8.1-37.7,20.7c-5.4-1.8-10.8-2.7-16.2-2.7c-25.2,0-44.9,19.8-44.9,44.9v0.9\tc-20.7,4.5-35.9,22.5-35.9,44c0,21.6,15.3,39.5,35.9,44v0.9c0,25.2,19.8,44.9,44.9,44.9c5.4,0,10.8-0.9,16.2-2.7\tc8.1,12.6,22.5,20.7,37.7,20.7c11.7,0,22.5-4.5,31.4-13.5c8.1,9,19.8,13.5,31.4,13.5c11.7,0,22.5-4.5,31.4-13.5\tc8.1,9,19.8,13.5,31.4,13.5c15.3,0,29.6-8.1,37.7-20.7c5.4,1.8,10.8,2.7,16.2,2.7c25.2,0,44.9-19.8,44.9-44.9v-0.9\tc20.7-4.5,35.9-22.5,35.9-44c0-21.6-15.3-39.5-35.9-44v-0.9c0-25.2-19.8-44.9-44.9-44.9c-6.3,0-11.7,0.9-16.2,2.7\tC348.5,14.1,334.1,6,318.9,6L318.9,6z\" />\r\n);\r\n\r\nexport const hair_style = (color) => ({\r\n  comb: <Comb hairColor={color} />,\r\n  guile: <Guile hairColor={color} />,\r\n  mexican: <Mexican hairColor={color} />,\r\n  puddle: <Puddle hairColor={color} />,\r\n});\r\n\r\nexport const hair_colors = {\r\n  Blonde: \"Blonde\",\r\n  LightBrown: \"LightBrown\",\r\n  Brown: \"Brown\",\r\n  DarkBrown: \"DarkBrown\",\r\n}\r\n\r\nexport const skin_colors = {\r\n  NaturalBeige: \"NaturalBeige\",\r\n  CreamyBeige: \"CreamyBeige\",\r\n  Caramel: \"Caramel\",\r\n  Chocolate: \"Chocolate\",\r\n  DarkChocolate: \"DarkChocolate\",\r\n}\r\n\r\nconst Man = ({hair, hairColor, skinColor}) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"man\" viewBox=\"0 0 512 512\">\r\n    <Face skinColor={skinColor}/>\r\n    {hair_style(hairColor)[hair]}\r\n  </svg>\r\n);\r\n\r\nMan.defaultProps = {\r\n  hair: \"mexican\",\r\n  hairColor: \"Brown\",\r\n  skinColor: \"Caramel\",\r\n}\r\n\r\nexport default Man;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Man, { hair_style, hair_colors, skin_colors } from './hair_styles/Man';\r\nimport './App.css';\r\n\r\nconst HairSelector = ({action}) => {\r\n  return Object\r\n    .keys(hair_style())\r\n    .map((e) => (\r\n      <button\r\n        key={`hair-${e}`}\r\n        onClick={() => action(e)}>\r\n        {e}\r\n      </button>\r\n    ));\r\n}\r\n\r\nconst ColorSelector = ({action, colors}) => {\r\n  return Object\r\n    .keys(colors)\r\n    .map((e) => (\r\n      <div\r\n        key={`hair-${e}`}\r\n        onClick={() => action(e)}\r\n        className={e}\r\n        style={{padding: \"10px\", margin: \"5px\"}}\r\n      />\r\n    ));\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hair: \"mexican\",\r\n      hairColor: \"DarkBrown\",\r\n      skinColor: \"Caramel\",\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      hair,\r\n      hairColor,\r\n      skinColor,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"wrapper\">\r\n          <h1>Avatar Editor\r\n            <span role=\"img\" aria-label=\"fire\">🔥</span>\r\n            <span role=\"img\" aria-label=\"fire\">🔥</span>\r\n            <span role=\"img\" aria-label=\"fire\">🔥</span>\r\n          </h1>\r\n          <div style={{width: 400, height: \"auto\"}}>\r\n            <Man\r\n              hair={hair}\r\n              hairColor={hairColor}\r\n              skinColor={skinColor}\r\n            />\r\n            <span>Skin Color</span>\r\n            <ColorSelector\r\n              colors={skin_colors}\r\n              action={(e) => this.setState({skinColor: e})}\r\n            />\r\n            <span>Hair Color</span>\r\n            <ColorSelector\r\n              colors={hair_colors}\r\n              action={(e) => this.setState({hairColor: e})}\r\n            />\r\n            <span>Hair</span>\r\n            <HairSelector\r\n              action={(e) => this.setState({hair: e})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          Avatar Editor © 2018 by @rantelo, @iburgos72 and @gerry\r\n        </footer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}